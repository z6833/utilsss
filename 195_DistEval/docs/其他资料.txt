服务器端口映射记录：
    服务器地址: 172.20.20.195
    项目工作目录: /mnt/data/zhao/
    对应进行版本: 172.20.20.187/southgis-dl/igis-ai:0.25
    docker名称：DistEval
    端口好映射：18800:22
    原始数据路径：/mnt/cephfs/deeplearning/data/archive/不同任务训练测试数据/数据分布网格切片数据/陆良3

总体思路：将图像转化为高维向量，并结合聚类算法进行聚类成K个类别；并结合主动学习的思想，达到少标注样本，不降低模型能力的目标。

    1. 影像分割成若干个小图像
    2. 利用自编码或预训练网络，将图像进行向量表示。
    3. 利用聚类算法，将所有向量聚集成K个类别；
    4. 每个类别，选择距离聚类中心最近的M个样本,得到K * M 个样本作为训练集；
    5. 对训练集进行标注；并进行模型训练；并判断是否达到预期目标。
    6. 利用模型对各个类别的数据进行推理，并计算熵值；选择不确定性最高的N个样本，进行标注，并加入到训练集中。
    7. 重复5，6的步骤，直到模型能达到预期目标。

工作记录：
    待完成任务：
        0. 影像大小确定
        1. 影像裁剪
        2. 图像聚类
        3. 聚类结果可视化

    时间计划：
        方案确定  1d
        代码跑通  2d
            1. 数据读取
            2.

        参数调优  3d
        可视化    1d

    直方图向量：
        # faster。三种方式中最快的
        img = cv.imread('home.jpg',0)
        hist = cv.calcHist([img],[0],None,[256],[0,256])

    评价指标：
        对于簇结构为凸的数据轮廓系数值高，
        而对于簇结构非凸需要使用DBSCAN进行聚类的数据，轮廓系数值低，
        因此，轮廓系数不应该用来评估不同聚类算法之间的优劣，
        比如Kmeans聚类结果与DBSCAN聚类结果之间的比较。

    需要做的工作：
        *0. 样本裁剪
        *1. 代码开发，整体流程跑通
        2. 图像向量表示算法调研
        3. 降维算法调研
        4. 聚类算法调研
        5. 聚类结果可视化
        6. 向量表示算法、图像向量算法，调优选择
        7. 算法、时间、聚类，如何选择？

    阶段性结论：
        1. kmeans 在K=3时，降维算法为PCA时，s-score目前最优
        2. 。。。

    可用资源：
        https://github.com/baifanxxx/awesome-active-learning
        https://github.com/NUAA-AL/alipy
        https://github.com/zyWang-Power/Clustering
        https://github.com/erdogant/clustimage



